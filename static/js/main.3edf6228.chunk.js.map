{"version":3,"sources":["Proek/GitHub.module.css","reportWebVitals.js","Proek/Search.tsx","Proek/Tiemer.tsx","assets/images/preloader.svg","components/common/Preloader/Preloader.tsx","Proek/UserDetails.tsx","Proek/UserList.tsx","Proek/GitHub.tsx","App.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Search","props","useState","tempSearch","setTempSearch","useEffect","value","onChange","e","currentTarget","placeholder","onClick","onSubmit","Timer","second","setSecond","intervalId","setInterval","prev","clearInterval","timerKey","Preloader","style","backgroundColor","src","preloader","UserDetails","userDetails","setUserDetails","SetSecond","spinner","SetSpinner","selectedUser","axios","get","login","res","data","className","s","username","id","toString","avatar_url","followers","UserList","users","SetUsers","term","items","map","u","selector","onUserSelect","GitHub","setSelectedUser","searchTerm","setSearchTerm","document","title","h1","Container","item","fixedValue","button3","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,SAAW,yBAAyB,KAAO,qBAAqB,GAAK,mBAAmB,SAAW,yBAAyB,QAAU,0B,4ECW/KC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,8BCIDQ,EAAS,SAACC,GAA2B,IAAD,EACPC,mBAAS,IADF,mBACtCC,EADsC,KACzBC,EADyB,KAM7C,OAHAC,qBAAU,WACND,EAAcH,EAAMK,SACtB,CAACL,EAAMK,QACE,gCACP,uBAAOA,MAAOH,EAAYI,SAAU,SAAAC,GAAC,OAAEJ,EAAcI,EAAEC,cAAcH,QAAQI,YAAY,UACzF,wBAASC,QAAS,WACdV,EAAMW,SAAST,IADnB,sB,gBCXKU,EAAO,SAACZ,GAAyB,IAAD,EACfC,mBAASD,EAAMa,QADA,mBACrCA,EADqC,KAC5BC,EAD4B,KAkBzC,OAfJV,qBAAU,WACNU,EAAUd,EAAMa,UAClB,CAACb,EAAMa,SAELT,qBAAU,WACNJ,EAAMM,SAASO,KACjB,CAACA,IAEHT,qBAAU,WACV,IAAMW,EAAaC,aAAY,WACzBF,GAAU,SAACG,GAAD,OAAQA,EAAK,OACzB,KACA,OAAO,WAAKC,cAAcH,MAC5B,CAACf,EAAMmB,WAEF,8BAAMN,KC1BF,MAA0B,sCCY1BO,EANW,WACtB,OAAO,qBAAMC,MAAQ,CAAEC,gBAAiB,SAAjC,SACH,qBAAKC,IAAKC,OCKLC,EAAa,SAACzB,GAA8B,IAAD,EACdC,mBAA0B,MADZ,mBAC7CyB,EAD6C,KAChCC,EADgC,OAExB1B,mBARb,IAMqC,mBAE7CY,EAF6C,KAErCe,EAFqC,OAGtB3B,oBAAS,GAHa,mBAG7C4B,EAH6C,KAGpCC,EAHoC,KAwBpD,OAnBA1B,qBAAU,WACHS,EAAO,GACNc,EAAe,QAErB,CAACd,IAEHT,qBAAU,WACDJ,EAAM+B,eACPD,GAAW,GACXE,IAAMC,IAAN,uCAAoDjC,EAAM+B,aAAaG,QAClEzC,MAAK,SAAA0C,GACFP,EAtBD,IAuBCD,EAAeQ,EAAIC,MACnBN,GAAW,SAIzB,CAAC9B,EAAM+B,eAENF,EACQ,cAAC,EAAD,IAGR,8BAEkBH,GAAe,sBAAKW,UAAWC,IAAEC,SAAlB,UACb,cAAC,EAAD,CAAO1B,OAAQA,EAAQP,SAAUsB,EAAWT,SAAUO,EAAYc,GAAGC,aACrE,6BAAKf,EAAYQ,QACjB,qBAAKX,IAAKG,EAAYgB,aACtB,uBACC,oCALY,IAKAhB,EAAYc,GACzB,uBACA,4CAAmBd,EAAYiB,gBCjC7CC,EAAW,SAAC5C,GAA6B,IAAD,EACtBC,mBAA4B,IADN,mBAC1C4C,EAD0C,KAClCC,EADkC,OAEnB7C,oBAAS,GAFU,mBAE1C4B,EAF0C,KAEjCC,EAFiC,KAYnD,OARE1B,qBAAU,WACN0B,GAAW,GACXE,IAAMC,IAAN,gDAAiEjC,EAAM+C,OAClEtD,MAAK,SAAA0C,GACFW,EAASX,EAAIC,KAAKY,OAClBlB,GAAW,QACrB,CAAC9B,EAAM+C,OAERlB,EACQ,cAAC,EAAD,IAGL,8BACA,6BAAMgB,EAAMI,KAAI,SAACC,GAAD,OAAS,oBAAKb,UAAWrC,EAAM+B,eAAgBmB,EAAIZ,IAAEa,SAAW,GACzDzC,QAAS,WAAKV,EAAMoD,aAAaF,IAD/B,SAInBA,EAAEhB,OADoBgB,EAAEV,YCbzBa,EAAS,WAAK,IAAD,EAEcpD,mBAAgC,MAF9C,mBAEnB8B,EAFmB,KAELuB,EAFK,OAGWrD,mBAAS,MAHpB,mBAGnBsD,EAHmB,KAGNC,EAHM,KAiBtB,OAXApD,qBAAU,WACH2B,IACC0B,SAASC,MAAQ3B,EAAaG,SAEpC,CAACH,IAOI,gCACH,oBAAIM,UAAWC,IAAEqB,GAAjB,gEACJ,sBAAKtB,UAAWC,IAAEsB,UAAlB,UACI,sBAAKvB,UAAWC,IAAEuB,KAAlB,UACC,cAAC,EAAD,CAAQlD,SAAU,SAACmD,GAAqBN,EAAcM,IAAczD,MAAOkD,IACxE,wBAAQlB,UAAWC,IAAEyB,QAASrD,QAAS,WAAK8C,EAAc,OAA1D,wDACH,cAAC,EAAD,CAAUT,KAAMQ,EAAYxB,aAAcA,EAAcqB,aAAcE,OAEvE,qBAAKjB,UAAWC,IAAEuB,KAAlB,SACA,cAAC,EAAD,CAAa9B,aAAcA,aCxCrBiC,EAAM,WAClB,OAAO,cAAC,EAAD,K,QCDLC,IAASC,OAAQ,cAAC,IAAMC,WAAP,UACb,cAAC,IAAD,UACI,cAAC,EAAD,QAGaV,SAASW,eAAe,SAGjD9E,M","file":"static/js/main.3edf6228.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"GitHub_Container__1b_9L\",\"selector\":\"GitHub_selector__68p7x\",\"item\":\"GitHub_item__9vzxB\",\"h1\":\"GitHub_h1__1CbPu\",\"username\":\"GitHub_username__1VJI4\",\"button3\":\"GitHub_button3__35Se0\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {useEffect, useState} from \"react\";\r\n\r\n\r\n\r\n\r\n\r\ntype SearchPropsType = {\r\n    value:string\r\n    onSubmit: (fixedValue:string)=>void\r\n}\r\n\r\nexport const Search = (props:SearchPropsType) => {\r\n    const [tempSearch , setTempSearch ] = useState('')\r\n\r\n    useEffect(()=>{\r\n        setTempSearch(props.value)\r\n    },[props.value])\r\n    return  (  <div>\r\n        <input value={tempSearch} onChange={e=>setTempSearch(e.currentTarget.value)} placeholder='serch'/>\r\n        <button  onClick={()=>{\r\n            props.onSubmit(tempSearch)\r\n        }\r\n        }>find</button>\r\n    </div>)\r\n}","import {useEffect, useState} from \"react\";\r\n\r\ntype TimerPropsType ={\r\n    second : number\r\n    onChange:(actualSecond:number)=>void\r\n    timerKey: string\r\n}\r\n\r\nexport const Timer =(props:TimerPropsType) =>{\r\n const [second , setSecond] = useState(props.second)\r\n\r\nuseEffect(()=>{\r\n    setSecond(props.second)\r\n},[props.second])\r\n\r\n    useEffect(()=>{\r\n        props.onChange(second)\r\n    },[second])\r\n\r\n    useEffect(()=>{\r\n    const intervalId = setInterval(()=>{\r\n          setSecond((prev)=>prev-1)\r\n      },1000)\r\n        return ()=>{clearInterval(intervalId)}\r\n    },[props.timerKey])\r\n\r\n    return <div>{second}</div>\r\n}","export default __webpack_public_path__ + \"static/media/preloader.5788b05c.svg\";","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg'\r\n\r\ntype PropsType = {\r\n}\r\n\r\nlet Preloader: React.FC = () => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {SearchUserType, UserType} from \"./GitHub\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Timer} from \"./Tiemer\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\nimport s from './GitHub.module.css'\r\n\r\nconst TimerSecond =27\r\n\r\ntype UserDetailsPropsType ={\r\n    selectedUser: SearchUserType | null\r\n}\r\n\r\nexport const UserDetails =(props:UserDetailsPropsType)=>{\r\n    const [userDetails, setUserDetails] = useState<null | UserType>(null)\r\n    const [second, SetSecond] = useState(TimerSecond)\r\n    const [spinner, SetSpinner] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(second<1){\r\n            setUserDetails(null)\r\n        }\r\n    },[second])\r\n\r\n    useEffect(()=>{\r\n        if(!!props.selectedUser){\r\n            SetSpinner(true)\r\n            axios.get<UserType>(`https://api.github.com/users/${props.selectedUser.login}`)\r\n                .then(res=>{\r\n                    SetSecond(TimerSecond)\r\n                    setUserDetails(res.data)\r\n                    SetSpinner(false)\r\n                    })\r\n        }\r\n\r\n    },[props.selectedUser])\r\n\r\n    if(spinner){\r\n        return <Preloader/>\r\n    }\r\n\r\nreturn <div>\r\n\r\n                       { userDetails && <div className={s.username}>\r\n                           <Timer second={second} onChange={SetSecond} timerKey={userDetails.id.toString()}/>\r\n                           <h2>{userDetails.login}</h2>\r\n                           <img src={userDetails.avatar_url}/>\r\n                           <br/>\r\n                            <b>id:</b> {userDetails.id}\r\n                           <br/>\r\n                           <b>followers: </b>{userDetails.followers}\r\n\r\n                       </div>\r\n                       }\r\n                   </div>\r\n}","\r\nimport s from \"./GitHub.module.css\";\r\nimport {SearchResult, SearchUserType} from \"./GitHub\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\n\r\ntype UserListPropsType = {\r\n    term:string\r\n    selectedUser: SearchUserType | null\r\n    onUserSelect: (user: SearchUserType)=>void\r\n}\r\n\r\n\r\n\r\nexport const UserList = (props:UserListPropsType) => {\r\n    const [users , SetUsers] = useState<SearchUserType []>([])\r\n    const [spinner, SetSpinner] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        SetSpinner(true)\r\n        axios.get<SearchResult>(`https://api.github.com/search/users?q=${props.term}`)\r\n            .then(res=>{\r\n                SetUsers(res.data.items)\r\n                SetSpinner(false)})\r\n    },[props.term])\r\n\r\n  if(spinner){\r\n      return <Preloader/>\r\n  }\r\n    return (\r\n        <div>\r\n        <ul>{ users.map((u:any)=><li  className={props.selectedUser ===u ? s.selector : ''}\r\n                               onClick={()=>{props.onUserSelect(u)}\r\n                               }\r\n                               key={u.id}\r\n            >{u.login}</li>)\r\n            }\r\n        </ul>\r\n</div>\r\n    )\r\n}","import s from './GitHub.module.css'\r\nimport {useEffect, useState} from \"react\";\r\nimport { Search} from \"./Search\";\r\nimport {UserDetails} from \"./UserDetails\";\r\nimport {UserList} from \"./UserList\";\r\n\r\n\r\n\r\n\r\n\r\nexport type SearchUserType = {\r\n    login:string,\r\n    id: number\r\n}\r\nexport type  SearchResult = {\r\n    items: SearchUserType []\r\n}\r\nexport type UserType = {\r\n    login:string\r\n    id:number\r\n    avatar_url:string\r\n    followers:number\r\n}\r\n\r\nexport const GitHub = ()=>{\r\n\r\nconst [selectedUser, setSelectedUser] = useState<SearchUserType | null>(null)\r\nconst [searchTerm , setSearchTerm] = useState('it')\r\n\r\n\r\n    useEffect(()=>{\r\n        if(selectedUser){\r\n            document.title = selectedUser.login\r\n        }\r\n    },[selectedUser])\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return <div>\r\n        <h1 className={s.h1}>Поиск по gitHub</h1>\r\n    <div className={s.Container}>\r\n        <div className={s.item} >\r\n         <Search onSubmit={(fixedValue:string)=>{setSearchTerm(fixedValue)}} value={searchTerm}/>\r\n            <button className={s.button3} onClick={()=>{setSearchTerm('it')}}>скинуть</button>\r\n         <UserList term={searchTerm} selectedUser={selectedUser} onUserSelect={setSelectedUser}/>\r\n        </div>\r\n        <div className={s.item} >\r\n        <UserDetails selectedUser={selectedUser}/>\r\n\r\n        </div>\r\n    </div>\r\n    </div>\r\n}","import React from 'react';\nimport {GitHub} from \"./Proek/GitHub\";\n\n\n\n\n\n\n\n\n\texport const App = () =>{\n\t\treturn <GitHub />\n\t}\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./App\";\nimport {HashRouter} from \"react-router-dom\";\n\n\n\n\n    ReactDOM.render( <React.StrictMode>\n        <HashRouter>\n            <App />\n        </HashRouter>\n\n    </React.StrictMode>, document.getElementById('root'));\n\n\nreportWebVitals();\n"],"sourceRoot":""}